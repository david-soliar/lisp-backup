(defun tridlicka (n)
  (if (< n 0)
      nil
    (im:split (im:chain(im:segment)
                       (im:rotated (im:segment) pi))
              (im:chain (im:segment)
                        (im:scaled (tridlicka (1- n)) 0.5))
              (im:chain (im:rotated (im:segment) (/ pi 6))
                        (im:scaled (im:rotated (tridlicka (1- n)) 
                                               (/ pi 6)) 0.5))
              (im:chain (im:rotated (im:segment) (/ pi -6))
                        (im:scaled (im:rotated (tridlicka (1- n)) 
                                               (/ pi -6)) 0.5)))))

(defun dvojicka (n)
  (if (< n 0)
      nil
    (im:split (im:segment)
              (im:scaled (im:chain (im:rotated (im:segment) (/ pi 6))
                                   (im:rotated (dvojicka (1- n)) (/ pi 6)))
                                   0.6)
              (im:scaled (im:chain (im:rotated (im:segment) (/ pi -6))
                                   (im:rotated (dvojicka (1- n)) (/ pi -6)))
                                   0.6))))